rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /users/{userid} {
    	allow read: if isLoggedIn()
      allow write: if isLoggedIn();
    }

    match /projects/{projectId} {
      allow read: if isMember();
      allow update: if isCreator();
      allow delete: if isCreator();
      allow create: if isLoggedIn();

      match /tasks/{taskId} {
        allow read, write: if isCreatorOrMember();
      }

      function isCreatorOrMember() {
      	return isCreatorOfParentProject() || isMemberOfParentProject();
      }

      function getProject() {
      	return get(/databases/$(database)/documents/projects/$(projectId)).data;
      }

      function getMembers() {
      	return resource.data.members;
      }

      function getCreator() {
      	return getProject().creator;
      }

      function isCreatorOfParentProject() {
      	return getCreator() == getUID();
      }

      function getMembersOfParentProject() {
        return getProject().members;
      }

      function isMemberOfParentProject() {
      	return getUID() in getMembersOfParentProject();
      }

      function isMember() {
        return getUID() in getMembers()
      }

      function isCreator() {
        return resource.data.creator == getUID()
      }
    }

    function isLoggedIn() {
    	return request.auth.uid != null
    }

    function getUID() {
    	return request.auth.uid
    }
  }
}
